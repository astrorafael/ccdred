#!/iraf/irafbin/bin.linux/ecl.e -f

# $Id: $
# Template CL script automatically 
# generated by  TCL + template file
# Do not edit.

logver = "IRAF V2.12.2 January 2004"
set home   = "[set cl(HOME)]/"
set uparm  = "home$uparm/"
reset imextn  ="fxf:fits,fit,fts"
reset imtype  = fits 
flpr

# load packages

images
imutil
immatch
noao
imred
ccdred

package user
task $grep = "$foreign"

keep

# do the work
{
	cd [set cl(basedir)]

	print("\\n==================================================", >> ccdred.logfile)
	print("=              IRAF XREGISTER                   ", >> ccdred.logfile)
	print("=", >> ccdred.logfile)
	print("= Directorio   base: [set cl(basedir)]", >> ccdred.logfile)
	print("= Lista  de entrada: @[set cl(input)]", >> ccdred.logfile)
	print("= Lista  de salida:  @[set cl(output)]", >> ccdred.logfile)
	print("= Imagen referencia: [set cl(reference)]", >> ccdred.logfile)
	print("= Imagen registrada: [set cl(imoutput)]", >> ccdred.logfile)
	print("==================================================\\n", >> ccdred.logfile)

	print("XRegister: Borrando imagenes de lista de salida", >> ccdred.logfile)
	imdelete  @[set cl(output)]
	print("XRegister: Borrando imagen registrada", >> ccdred.logfile)
	imdelete [set cl(imoutput)]
	print("XRegister: Borrando fichero de desplazamientos", >> ccdred.logfile)
	delete [set cl(shifts)]
 	delete Overlap.txt

	# La zona de overlap se muestra solo con verbose+

	print("XRegister: Registrando imagenes", >> ccdred.logfile)

	xregister( "@[set cl(input)]", "[set cl(reference)]", \
	"[set cl(regions)]", "[set cl(shifts)]",  output="@[set cl(output)]", \
	database-, verbose+, \
	boundary="constant", constant=0, background="plane", \
	correlation="fourier", interp="linear", xwindow=50, ywindow=50) \
	| grep "Overlap" >> Overlap.txt

	print("XRegister: Incorporando desplazamientos al log", >> ccdred.logfile)
	type("[set cl(shifts)]", >> ccdred.logfile)
	type("Overlap.txt", >> ccdred.logfile)

	list = "Overlap.txt"
	x  = fscanf (list, "Overlap region: %s", s1)
	list = ""	

	print("XRegister: Recortando imagenes a zona comun", >> ccdred.logfile)
	list = "[set cl(output)]"
	while (fscan (list, s2) != EOF) { 
		imcopy(s2//s1, s2, >> ccdred.logfile)
	}
	list = ""	

	print("XRegister: Combinando imagenes", >> ccdred.logfile)
	imcombine("@[set cl(output)]", "[set cl(imoutput)]", \
		reject="[set cl(reject)]", combine="[set cl(combine)]", \
		lsigma=3, hsigma=3,\
		mclip+, nkeep=1, project-, logfile=ccdred.logfile)	
	print("XRegister: TERMINADO", >> ccdred.logfile)
	logout
}
